/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthImport } from './routes/_auth'
import { Route as IndexImport } from './routes/index'
import { Route as MemorizationMemorizationIdImport } from './routes/memorization/$memorizationId'
import { Route as MemorizationMemorizationIdRecordImport } from './routes/memorization/$memorizationId/record'
import { Route as MemorizationMemorizationIdMainTextImport } from './routes/memorization/$memorizationId/main-text'
import { Route as MemorizationMemorizationIdRecordRecordIdImport } from './routes/memorization/$memorizationId/record_.$recordId'

// Create/Update Routes

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const MemorizationMemorizationIdRoute = MemorizationMemorizationIdImport.update(
  {
    path: '/memorization/$memorizationId',
    getParentRoute: () => rootRoute,
  } as any,
)

const MemorizationMemorizationIdRecordRoute =
  MemorizationMemorizationIdRecordImport.update({
    path: '/record',
    getParentRoute: () => MemorizationMemorizationIdRoute,
  } as any)

const MemorizationMemorizationIdMainTextRoute =
  MemorizationMemorizationIdMainTextImport.update({
    path: '/main-text',
    getParentRoute: () => MemorizationMemorizationIdRoute,
  } as any)

const MemorizationMemorizationIdRecordRecordIdRoute =
  MemorizationMemorizationIdRecordRecordIdImport.update({
    path: '/record/$recordId',
    getParentRoute: () => MemorizationMemorizationIdRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/memorization/$memorizationId': {
      id: '/memorization/$memorizationId'
      path: '/memorization/$memorizationId'
      fullPath: '/memorization/$memorizationId'
      preLoaderRoute: typeof MemorizationMemorizationIdImport
      parentRoute: typeof rootRoute
    }
    '/memorization/$memorizationId/main-text': {
      id: '/memorization/$memorizationId/main-text'
      path: '/main-text'
      fullPath: '/memorization/$memorizationId/main-text'
      preLoaderRoute: typeof MemorizationMemorizationIdMainTextImport
      parentRoute: typeof MemorizationMemorizationIdImport
    }
    '/memorization/$memorizationId/record': {
      id: '/memorization/$memorizationId/record'
      path: '/record'
      fullPath: '/memorization/$memorizationId/record'
      preLoaderRoute: typeof MemorizationMemorizationIdRecordImport
      parentRoute: typeof MemorizationMemorizationIdImport
    }
    '/memorization/$memorizationId/record/$recordId': {
      id: '/memorization/$memorizationId/record/$recordId'
      path: '/record/$recordId'
      fullPath: '/memorization/$memorizationId/record/$recordId'
      preLoaderRoute: typeof MemorizationMemorizationIdRecordRecordIdImport
      parentRoute: typeof MemorizationMemorizationIdImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  MemorizationMemorizationIdRoute: MemorizationMemorizationIdRoute.addChildren({
    MemorizationMemorizationIdMainTextRoute,
    MemorizationMemorizationIdRecordRoute,
    MemorizationMemorizationIdRecordRecordIdRoute,
  }),
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_auth",
        "/memorization/$memorizationId"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_auth": {
      "filePath": "_auth.tsx"
    },
    "/memorization/$memorizationId": {
      "filePath": "memorization/$memorizationId.tsx",
      "children": [
        "/memorization/$memorizationId/main-text",
        "/memorization/$memorizationId/record",
        "/memorization/$memorizationId/record/$recordId"
      ]
    },
    "/memorization/$memorizationId/main-text": {
      "filePath": "memorization/$memorizationId/main-text.tsx",
      "parent": "/memorization/$memorizationId"
    },
    "/memorization/$memorizationId/record": {
      "filePath": "memorization/$memorizationId/record.tsx",
      "parent": "/memorization/$memorizationId"
    },
    "/memorization/$memorizationId/record/$recordId": {
      "filePath": "memorization/$memorizationId/record_.$recordId.tsx",
      "parent": "/memorization/$memorizationId"
    }
  }
}
ROUTE_MANIFEST_END */
